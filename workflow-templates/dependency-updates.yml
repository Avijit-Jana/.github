name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # For Node.js projects
      - name: Setup Node.js
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Update npm dependencies
        if: hashFiles('package.json') != ''
        run: |
          # Update dependencies
          npm update
          # Check if there are changes
          if ! git diff --quiet package-lock.json; then
            echo "npm_updates=true" >> $GITHUB_ENV
          fi

      # For Go projects
      - name: Setup Go
        if: hashFiles('go.mod') != ''
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Update Go dependencies
        if: hashFiles('go.mod') != ''
        run: |
          # Update Go dependencies
          go get -u ./...
          go mod tidy
          # Check if there are changes
          if ! git diff --quiet go.mod go.sum; then
            echo "go_updates=true" >> $GITHUB_ENV
          fi

      # For Python projects
      - name: Setup Python
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Update Python dependencies
        if: hashFiles('requirements.txt') != ''
        run: |
          # Install pip-tools for dependency management
          pip install pip-tools
          # Update requirements
          pip-compile --upgrade requirements.in
          # Check if there are changes
          if ! git diff --quiet requirements.txt; then
            echo "python_updates=true" >> $GITHUB_ENV
          fi

      # For Rust projects
      - name: Setup Rust
        if: hashFiles('Cargo.toml') != ''
        uses: dtolnay/rust-toolchain@stable

      - name: Update Rust dependencies
        if: hashFiles('Cargo.toml') != ''
        run: |
          # Update Cargo dependencies
          cargo update
          # Check if there are changes
          if ! git diff --quiet Cargo.lock; then
            echo "rust_updates=true" >> $GITHUB_ENV
          fi

      - name: Create Pull Request
        if: env.npm_updates == 'true' || env.go_updates == 'true' || env.python_updates == 'true' || env.rust_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: automated dependency updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates generated by the dependency update workflow.
            
            ### Changes
            - ðŸ“¦ Updated package dependencies to their latest compatible versions
            
            ### Testing
            Please review the changes and ensure all tests pass before merging.
            
            ### Notes
            - This PR was created automatically by the dependency update workflow
            - Dependencies are updated to the latest compatible versions based on semantic versioning
            
            ---
            
            ðŸ¤– This PR was generated automatically
          branch: automated/dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated

  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    if: github.repository_owner != ''
    steps:
      - name: Enable Dependabot alerts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Enable Dependabot alerts if not already enabled
              await github.rest.repos.enableVulnerabilityAlerts({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              console.log('Dependabot vulnerability alerts enabled');
            } catch (error) {
              if (error.status === 422) {
                console.log('Dependabot vulnerability alerts already enabled');
              } else {
                throw error;
              }
            }

      - name: Check for security advisories
        uses: actions/github-script@v7
        with:
          script: |
            // Check for security advisories
            const { data: advisories } = await github.rest.repos.listSecurityAdvisories({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'published'
            });
            
            if (advisories.length > 0) {
              console.log(`Found ${advisories.length} security advisories`);
              console.log('Consider reviewing and addressing these security issues');
            } else {
              console.log('No security advisories found');
            }
